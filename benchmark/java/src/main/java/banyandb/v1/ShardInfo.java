// automatically generated by the FlatBuffers compiler, do not modify

package banyandb.v1;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@javax.annotation.Generated(value="flatc")
@SuppressWarnings("unused")
public final class ShardInfo extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static ShardInfo getRootAsShardInfo(ByteBuffer _bb) { return getRootAsShardInfo(_bb, new ShardInfo()); }
  public static ShardInfo getRootAsShardInfo(ByteBuffer _bb, ShardInfo obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ShardInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long number() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public String routingFields(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int routingFieldsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public StringVector routingFieldsVector() { return routingFieldsVector(new StringVector()); }
  public StringVector routingFieldsVector(StringVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createShardInfo(FlatBufferBuilder builder,
      long number,
      int routing_fieldsOffset) {
    builder.startTable(2);
    ShardInfo.addRoutingFields(builder, routing_fieldsOffset);
    ShardInfo.addNumber(builder, number);
    return ShardInfo.endShardInfo(builder);
  }

  public static void startShardInfo(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addNumber(FlatBufferBuilder builder, long number) { builder.addInt(0, (int)number, (int)0L); }
  public static void addRoutingFields(FlatBufferBuilder builder, int routingFieldsOffset) { builder.addOffset(1, routingFieldsOffset, 0); }
  public static int createRoutingFieldsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startRoutingFieldsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endShardInfo(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ShardInfo get(int j) { return get(new ShardInfo(), j); }
    public ShardInfo get(ShardInfo obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

