// automatically generated by the FlatBuffers compiler, do not modify

package banyandb.v1;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@javax.annotation.Generated(value="flatc")
@SuppressWarnings("unused")
public final class Series extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static Series getRootAsSeries(ByteBuffer _bb) { return getRootAsSeries(_bb, new Series()); }
  public static Series getRootAsSeries(ByteBuffer _bb, Series obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Series __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte catalog() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public banyandb.v1.Metadata series() { return series(new banyandb.v1.Metadata()); }
  public banyandb.v1.Metadata series(banyandb.v1.Metadata obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createSeries(FlatBufferBuilder builder,
      byte catalog,
      int seriesOffset) {
    builder.startTable(2);
    Series.addSeries(builder, seriesOffset);
    Series.addCatalog(builder, catalog);
    return Series.endSeries(builder);
  }

  public static void startSeries(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addCatalog(FlatBufferBuilder builder, byte catalog) { builder.addByte(0, catalog, 0); }
  public static void addSeries(FlatBufferBuilder builder, int seriesOffset) { builder.addOffset(1, seriesOffset, 0); }
  public static int endSeries(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Series get(int j) { return get(new Series(), j); }
    public Series get(Series obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

