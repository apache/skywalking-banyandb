// automatically generated by the FlatBuffers compiler, do not modify

package banyandb.v1;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@javax.annotation.Generated(value="flatc")
@SuppressWarnings("unused")
public final class Node extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static Node getRootAsNode(ByteBuffer _bb) { return getRootAsNode(_bb, new Node()); }
  public static Node getRootAsNode(ByteBuffer _bb, Node obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Node __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String addr() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer addrAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer addrInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public long updateTime() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long createTime() { int o = __offset(10); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createNode(FlatBufferBuilder builder,
      int idOffset,
      int addrOffset,
      long update_time,
      long create_time) {
    builder.startTable(4);
    Node.addCreateTime(builder, create_time);
    Node.addUpdateTime(builder, update_time);
    Node.addAddr(builder, addrOffset);
    Node.addId(builder, idOffset);
    return Node.endNode(builder);
  }

  public static void startNode(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addAddr(FlatBufferBuilder builder, int addrOffset) { builder.addOffset(1, addrOffset, 0); }
  public static void addUpdateTime(FlatBufferBuilder builder, long updateTime) { builder.addLong(2, updateTime, 0L); }
  public static void addCreateTime(FlatBufferBuilder builder, long createTime) { builder.addLong(3, createTime, 0L); }
  public static int endNode(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Node get(int j) { return get(new Node(), j); }
    public Node get(Node obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

