// automatically generated by the FlatBuffers compiler, do not modify

package banyandb.v1;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@javax.annotation.Generated(value="flatc")
@SuppressWarnings("unused")
public final class EntityCriteria extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static EntityCriteria getRootAsEntityCriteria(ByteBuffer _bb) { return getRootAsEntityCriteria(_bb, new EntityCriteria()); }
  public static EntityCriteria getRootAsEntityCriteria(ByteBuffer _bb, EntityCriteria obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public EntityCriteria __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public banyandb.v1.Metadata metadata() { return metadata(new banyandb.v1.Metadata()); }
  public banyandb.v1.Metadata metadata(banyandb.v1.Metadata obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public banyandb.v1.RangeQuery timestampNanoseconds() { return timestampNanoseconds(new banyandb.v1.RangeQuery()); }
  public banyandb.v1.RangeQuery timestampNanoseconds(banyandb.v1.RangeQuery obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public long offset() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public long limit() { int o = __offset(10); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public banyandb.v1.QueryOrder orderBy() { return orderBy(new banyandb.v1.QueryOrder()); }
  public banyandb.v1.QueryOrder orderBy(banyandb.v1.QueryOrder obj) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public banyandb.v1.PairQuery fields(int j) { return fields(new banyandb.v1.PairQuery(), j); }
  public banyandb.v1.PairQuery fields(banyandb.v1.PairQuery obj, int j) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int fieldsLength() { int o = __offset(14); return o != 0 ? __vector_len(o) : 0; }
  public banyandb.v1.PairQuery.Vector fieldsVector() { return fieldsVector(new banyandb.v1.PairQuery.Vector()); }
  public banyandb.v1.PairQuery.Vector fieldsVector(banyandb.v1.PairQuery.Vector obj) { int o = __offset(14); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  public banyandb.v1.Projection projection() { return projection(new banyandb.v1.Projection()); }
  public banyandb.v1.Projection projection(banyandb.v1.Projection obj) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createEntityCriteria(FlatBufferBuilder builder,
      int metadataOffset,
      int timestamp_nanosecondsOffset,
      long offset,
      long limit,
      int order_byOffset,
      int fieldsOffset,
      int projectionOffset) {
    builder.startTable(7);
    EntityCriteria.addProjection(builder, projectionOffset);
    EntityCriteria.addFields(builder, fieldsOffset);
    EntityCriteria.addOrderBy(builder, order_byOffset);
    EntityCriteria.addLimit(builder, limit);
    EntityCriteria.addOffset(builder, offset);
    EntityCriteria.addTimestampNanoseconds(builder, timestamp_nanosecondsOffset);
    EntityCriteria.addMetadata(builder, metadataOffset);
    return EntityCriteria.endEntityCriteria(builder);
  }

  public static void startEntityCriteria(FlatBufferBuilder builder) { builder.startTable(7); }
  public static void addMetadata(FlatBufferBuilder builder, int metadataOffset) { builder.addOffset(0, metadataOffset, 0); }
  public static void addTimestampNanoseconds(FlatBufferBuilder builder, int timestampNanosecondsOffset) { builder.addOffset(1, timestampNanosecondsOffset, 0); }
  public static void addOffset(FlatBufferBuilder builder, long offset) { builder.addInt(2, (int)offset, (int)0L); }
  public static void addLimit(FlatBufferBuilder builder, long limit) { builder.addInt(3, (int)limit, (int)0L); }
  public static void addOrderBy(FlatBufferBuilder builder, int orderByOffset) { builder.addOffset(4, orderByOffset, 0); }
  public static void addFields(FlatBufferBuilder builder, int fieldsOffset) { builder.addOffset(5, fieldsOffset, 0); }
  public static int createFieldsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startFieldsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addProjection(FlatBufferBuilder builder, int projectionOffset) { builder.addOffset(6, projectionOffset, 0); }
  public static int endEntityCriteria(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public EntityCriteria get(int j) { return get(new EntityCriteria(), j); }
    public EntityCriteria get(EntityCriteria obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

