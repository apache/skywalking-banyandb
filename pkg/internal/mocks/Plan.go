// Code generated by mockery (devel). DO NOT EDIT.

package mocks

import (
	logical "github.com/apache/skywalking-banyandb/pkg/logical"
	mock "github.com/stretchr/testify/mock"

	types "github.com/apache/skywalking-banyandb/pkg/types"
)

// Plan is an autogenerated mock type for the Plan type
type Plan struct {
	mock.Mock
}

// Children provides a mock function with given fields:
func (_m *Plan) Children() []logical.Plan {
	ret := _m.Called()

	var r0 []logical.Plan
	if rf, ok := ret.Get(0).(func() []logical.Plan); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]logical.Plan)
		}
	}

	return r0
}

// Schema provides a mock function with given fields:
func (_m *Plan) Schema() (types.Schema, error) {
	ret := _m.Called()

	var r0 types.Schema
	if rf, ok := ret.Get(0).(func() types.Schema); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.Schema)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// String provides a mock function with given fields:
func (_m *Plan) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
