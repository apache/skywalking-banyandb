# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main

env:
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5

jobs:
  prepare:
    name: Prepare (Generate)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Cache Go Modules
        uses: actions/cache@v4
        id: cache-go
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cache Tools
        uses: actions/cache@v4
        id: cache-tool
        with:
          path: bin
          key: ${{ runner.os }}-tool-${{ hashFiles('**/version.mk') }}
          restore-keys: |
            ${{ runner.os }}-tool-
      - uses: actions/setup-node@v4
        with:
          node-version: 20.12
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Update dependencies 
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: GOPROXY=https://proxy.golang.org go mod download
      - name: Generate codes
        run: make generate
      - name: Upload generated files
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/*.pb.go
            **/*_mock.go
          retention-days: 1
  check:
    name: Check
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Cache Go Modules
        uses: actions/cache@v4
        id: cache-go
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cache Tools
        uses: actions/cache@v4
        id: cache-tool
        with:
          path: bin
          key: ${{ runner.os }}-check-tool-${{ hashFiles('**/version.mk') }}
          restore-keys: |
            ${{ runner.os }}-check-tool-
      - uses: actions/setup-node@v4
        with:
          node-version: 20.12
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json
      - name: npm ci and format
        run: |
          cd ui
          npm ci
          npm run format
          cd ../
      - name: Run consistency check
        run: |
          if [ ! -z "`git status -s`" ]; then \
            echo "Following files are not consistent with CI:"; \
            git status -s; \
            exit 1; \
          fi
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Check License Header
        run: make license-check
      - name: Update dependencies 
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: GOPROXY=https://proxy.golang.org go mod download
      - name: Check requirements
        run: make check-req
      - name: Lint
        run: make lint
      - name: Generate dependencies licenses
        run: make license-dep
      - name: Check
        run: make check
      - name: Build
        run: make build
      - name: Build Release
        run: make release
  test-banyand:
    name: Test Banyand
    needs: [check]
    uses: ./.github/workflows/test-banyand.yml
  test-bydbctl:
    name: Test Bydbctl
    needs: [check]
    uses: ./.github/workflows/test-bydbctl.yml
  test-pkg:
    name: Test Pkg
    needs: [check]
    uses: ./.github/workflows/test-pkg.yml
  test-integration-standalone:
    name: Test Integration Standalone
    needs: [check]
    uses: ./.github/workflows/test-integration-standalone.yml
  test-integration-distributed:
    name: Test Integration Distributed
    needs: [check]
    uses: ./.github/workflows/test-integration-distributed.yml
  e2e:
    name: E2E Tests
    needs: [check]
    uses: ./.github/workflows/e2e.yml
      
  result:
    name: Continuous Integration
    runs-on: ubuntu-24.04
    needs: [test-banyand, test-bydbctl, test-pkg, test-integration-standalone, test-integration-distributed, e2e]
    steps:
      - run: echo 'success'
