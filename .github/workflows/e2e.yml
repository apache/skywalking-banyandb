# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: OAP-E2E

on:
  workflow_call:

env:
  SW_AGENT_JDK_VERSION: 8
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5

concurrency:
  group: e2e-storages-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  DockerImage:
    name: Build Docker image
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Setup build environment
        uses: ./.github/actions/setup-build-env
        with:
          download-artifacts: 'true'
          setup-docker: 'true'
      - name: Build and upload docker image
        uses: ./.github/actions/build-docker-image
        with:
          tag: ${{ github.sha }}

  StoragePlugins:
    name: Storage E2E
    runs-on: ubuntu-latest
    timeout-minutes: 90
    needs: [DockerImage]
    strategy:
      fail-fast: false
      matrix:
        test:
          - name: BanyanDB
            config: test/e2e-v2/cases/storage/banyandb/e2e.yaml
          - name: Trace Profiling BanyanDB
            config: test/e2e-v2/cases/profiling/trace/banyandb/e2e.yaml
          - name: Event BanyanDB
            config: test/e2e-v2/cases/event/banyandb/e2e.yaml
          - name: BanyanDB Cluster Mode
            config: test/e2e-v2/cases/cluster/e2e.yaml
          # TODO: Enable Lifecycle test when it is ready
          # - name: Lifecycle
          #   config: test/e2e-v2/cases/lifecycle/e2e.yaml
    env:
      TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Setup build environment
        uses: ./.github/actions/setup-build-env
        with:
          download-artifacts: 'true'
          setup-docker: 'false'
      - name: Download docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: banyandb-docker-image
          path: /tmp
      - name: Load docker image
        run: |
          docker load --input /tmp/banyandb-testing-image.tar.gz
          docker image ls
      - name: Generate data for lifecycle
        if: ${{ matrix.test.name == 'Lifecycle' }}
        run: |
          bash test/e2e-v2/cases/lifecycle/data-generator/gen.sh
      - name: ${{ matrix.test.name }}
        uses: apache/skywalking-infra-e2e@7e4b5b68716fdb7b79b21fa8908f9db497e1b115
        with:
          e2e-file: $GITHUB_WORKSPACE/${{ matrix.test.config }}
      - name: Fix directory permissions
        if: ${{ (failure() && matrix.test.name == 'Lifecycle') }}
        run: sudo chmod -R 777 test/e2e-v2/cases/lifecycle/data-generator/tmp
      - if: ${{ failure() }}
        run: |
          df -h
          du -sh .
          docker images
      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        name: Upload Logs
        with:
          name: test-logs-${{ matrix.test.name }}
          path: "${{ env.SW_INFRA_E2E_LOG_DIR }}"
      - uses: actions/upload-artifact@v4
        if: ${{ (failure() && matrix.test.name == 'Lifecycle') }}
        name: Upload generated data
        with:
          name: lifecycle-data
          path: "test/e2e-v2/cases/lifecycle/data-generator/tmp"

  Storage:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    needs: [StoragePlugins]
    steps:
      - name: To pass or not pass
        run: echo "Just to make the GitHub merge button green"
