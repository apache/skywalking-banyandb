name: Build Multiarch Docker

on:
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    outputs:
      imageTag: ${{ steps.meta.outputs.json }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: actions/checkout@v3.1.0
        name: Checkout current repository
      - name: Cache Go Modules
        uses: actions/cache@v3
        id: cache-go
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cache Tools
        uses: actions/cache@v3
        id: cache-tool
        with:
          path: bin
          key: ${{ runner.os }}-build-tool-${{ hashFiles('**version.mk') }}
          restore-keys: |
            ${{ runner.os }}-build-tool-
      - uses: actions/setup-node@v3
        with:
          node-version: 20.12
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - name: Update dependencies
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: GOPROXY=https://proxy.golang.org go mod download
      - name: Generate codes
        run: make generate
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          CI_COMMIT_SHA: ${{ steps.date.outputs.date }}
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
