# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Reusable Test

on:
  workflow_call:
    inputs:
      test-name:
        required: false
        type: string
        default: Test
      options:
        required: false
        type: string
      timeout-minutes:
        required: false
        type: number
        default: 60
      pkg:
        required: false
        type: string
        default: ./...
      coverage-flag:
        required: false
        type: string
        default: unittests
      timezone:
        required: false
        type: string
        default: UTC

jobs:
  test:
    name: ${{ inputs.test-name }} (${{ inputs.timezone }})
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Set timezone
        run: sudo timedatectl set-timezone ${{ inputs.timezone || 'UTC' }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Cache tools
        uses: actions/cache@v4
        id: cache-tool
        with:
          path: bin
          key: ${{ runner.os }}-test-tool-${{ hashFiles('**version.mk') }}
          restore-keys: |
            ${{ runner.os }}-test-tool-
      - uses: actions/setup-node@v4
        with:
          node-version: 20.12
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Test integration and banyand
        run: TEST_CI_OPTS="--cover --covermode atomic --coverprofile=coverage.out ${{ inputs.options }}" make test-ci PKG=${{ inputs.pkg }}
      - if: ${{ failure() }}
        run: |
          ls /tmp
      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        name: Upload BanyanDB Data Folder
        with:
          name: test-data-${{ inputs.timezone }}
          path: "/tmp/banyandb-test-*"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.out
          flags: ${{ inputs.coverage-flag }}
