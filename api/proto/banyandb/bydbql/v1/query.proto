// Licensed to Apache Software Foundation (ASF) under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Apache Software Foundation (ASF) licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";

package banyandb.bydbql.v1;

import "banyandb/common/v1/common.proto";
import "banyandb/measure/v1/query.proto";
import "banyandb/measure/v1/topn.proto";
import "banyandb/property/v1/rpc.proto";
import "banyandb/stream/v1/query.proto";
import "banyandb/trace/v1/query.proto";
import "validate/validate.proto";

option go_package = "github.com/apache/skywalking-banyandb/api/proto/banyandb/bydbql/v1";
option java_package = "org.apache.skywalking.banyandb.bydbql.v1";

// QueryExecutionContext provides resource context when FROM clause is omitted
message QueryExecutionContext {
  // catalog indicates the type of resource (STREAM, MEASURE, PROPERTY, TRACE)
  common.v1.Catalog catalog = 1 [(validate.rules).enum.defined_only = true];
  // group indicates where the data point is stored
  repeated string group = 2 [(validate.rules).repeated.min_items = 1];
  // name is the identity of the resource
  string name = 3 [(validate.rules).string.min_len = 1];
}

// QueryRequest is the main request message for BydbQL queries
message QueryRequest {
  // query is the BydbQL query string
  string query = 1 [(validate.rules).string.min_len = 1];
  // execution_context provides resource context when FROM clause is omitted
  // This field is optional when the FROM clause is present in the query
  QueryExecutionContext execution_context = 2;
}

// QueryResponse contains the result of a BydbQL query
message QueryResponse {
  // result contains the actual query result based on the query type
  oneof result {
    // stream_result is returned for stream queries
    stream.v1.QueryResponse stream_result = 1;
    // measure_result is returned for measure queries
    measure.v1.QueryResponse measure_result = 2;
    // property_result is returned for property queries
    property.v1.QueryResponse property_result = 3;
    // trace_result is returned for trace queries
    trace.v1.QueryResponse trace_result = 4;
    // topn_result is returned for TopN queries
    measure.v1.TopNResponse topn_result = 5;
  }
}

// QueryStreamRequest is used for stream-specific queries
message QueryStreamRequest {
  // query is the BydbQL query string (typically without FROM clause)
  string query = 1 [(validate.rules).string.min_len = 1];
  // group indicates where the data point is stored
  // This field is extracted from the URL path
  string group = 2 [(validate.rules).string.min_len = 1];
  // name is the resource name extracted from the URL path
  string name = 3 [(validate.rules).string.min_len = 1];
}

// QueryStreamResponse is the response for stream-specific queries
message QueryStreamResponse {
  // stream_result contains the actual stream query result
  stream.v1.QueryResponse stream_result = 1;
}

// QueryMeasureRequest is used for measure-specific queries
message QueryMeasureRequest {
  // query is the BydbQL query string (typically without FROM clause)
  string query = 1 [(validate.rules).string.min_len = 1];
  // group indicates where the data point is stored
  // This field is extracted from the URL path
  string group = 2 [(validate.rules).string.min_len = 1];
  // name is the resource name extracted from the URL path
  string name = 3 [(validate.rules).string.min_len = 1];
}

// QueryMeasureResponse is the response for measure-specific queries
message QueryMeasureResponse {
  // measure_result contains the actual measure query result
  measure.v1.QueryResponse measure_result = 1;
}

// QueryPropertyRequest is used for property-specific queries
message QueryPropertyRequest {
  // query is the BydbQL query string (typically without FROM clause)
  string query = 1 [(validate.rules).string.min_len = 1];
  // group indicates where the data point is stored
  // This field is extracted from the URL path
  string group = 2 [(validate.rules).string.min_len = 1];
  // name is the resource name extracted from the URL path
  string name = 3 [(validate.rules).string.min_len = 1];
}

// QueryPropertyResponse is the response for property-specific queries
message QueryPropertyResponse {
  // property_result contains the actual property query result
  property.v1.QueryResponse property_result = 1;
}

// QueryTraceRequest is used for trace-specific queries
message QueryTraceRequest {
  // query is the BydbQL query string (typically without FROM clause)
  string query = 1 [(validate.rules).string.min_len = 1];
  // group indicates where the data point is stored
  // This field is extracted from the URL path
  string group = 2 [(validate.rules).string.min_len = 1];
  // name is the resource name extracted from the URL path
  string name = 3 [(validate.rules).string.min_len = 1];
}

// QueryTraceResponse is the response for trace-specific queries
message QueryTraceResponse {
  // trace_result contains the actual trace query result
  trace.v1.QueryResponse trace_result = 1;
}

// TopNRequest is used for TopN-specific queries
message TopNRequest {
  // query is the BydbQL query string (typically without FROM clause)
  string query = 1 [(validate.rules).string.min_len = 1];
  // group indicates where the data point is stored
  // This field is extracted from the URL path
  string group = 2 [(validate.rules).string.min_len = 1];
  // name is the resource name extracted from the URL path
  string name = 3 [(validate.rules).string.min_len = 1];
}

// TopNResponse is the response for TopN-specific queries
message TopNResponse {
  // topn_result contains the actual TopN query result
  measure.v1.TopNResponse topn_result = 1;
}
