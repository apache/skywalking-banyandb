// Licensed to Apache Software Foundation (ASF) under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Apache Software Foundation (ASF) licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";

option java_package = "org.apache.skywalking.banyandb.common.v1";
option go_package = "github.com/apache/skywalking-banyandb/api/proto/banyandb/common/v1";

package banyandb.common.v1;

import "google/protobuf/timestamp.proto";

enum Catalog {
    CATALOG_UNSPECIFIED = 0;
    CATALOG_STREAM = 1;
    CATALOG_MEASURE = 2;
}

// Metadata is for multi-tenant, multi-model use
message Metadata {
    // group contains a set of options, like retention policy, max
    string group = 1;
    // name of the entity
    string name = 2;
    uint32 id = 3;
    // readonly. create_revision is the revision of last creation on this key.
    int64 create_revision = 4;
    // readonly. mod_revision is the revision of last modification on this key.
    int64 mod_revision = 5;
}

// Duration represents the elapsed time between two instants
message Duration {
    uint32 val = 1;
    enum DurationUnit {
        DURATION_UNIT_UNSPECIFIED = 0;
        DURATION_UNIT_HOUR = 1;
        DURATION_UNIT_DAY = 2;
        DURATION_UNIT_WEEK = 3;
        DURATION_UNIT_MONTH = 4;
    }
    DurationUnit unit = 2;
}

// IntervalRule indicates the time range of a segment
message IntervalRule {
    // tag_name is for matching a tag
    string tag_name = 1;
    // tag_value is used by a equality matcher to match a tag
    oneof tag_value {
        string str = 2;
        int64 int = 3;
    }
    // interval indicates how frequently to send a data point
    string interval = 4;
    // block_num specific how many blocks in a segment
    uint32 block_num = 5;
    // ttl indicates time to live, how long the data will be cached
    Duration ttl = 6;
}

message ResourceOpts {
    // shard_num is the number of shards
    uint32 shard_num = 1;
    // interval_rules denote the size of segment.
    repeated IntervalRule interval_rules = 2;
}

// Group is an internal object for Group management
message Group {
    // metadata define the group's identity
    common.v1.Metadata metadata = 1;
    // catalog denotes which type of data the group contains
    common.v1.Catalog catalog = 2;
    // resourceOpts indicates the structure of the underlying kv storage
    ResourceOpts resource_opts = 3;
    // updated_at indicates when resources of the group are updated
    google.protobuf.Timestamp updated_at = 4;
}
