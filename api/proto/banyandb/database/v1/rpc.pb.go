// Licensed to Apache Software Foundation (ASF) under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Apache Software Foundation (ASF) licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: banyandb/database/v1/rpc.proto

package v1

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	v1 "github.com/apache/skywalking-banyandb/api/proto/banyandb/common/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream *Stream `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *StreamCreateRequest) Reset() {
	*x = StreamCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCreateRequest) ProtoMessage() {}

func (x *StreamCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCreateRequest.ProtoReflect.Descriptor instead.
func (*StreamCreateRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *StreamCreateRequest) GetStream() *Stream {
	if x != nil {
		return x.Stream
	}
	return nil
}

type StreamCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamCreateResponse) Reset() {
	*x = StreamCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCreateResponse) ProtoMessage() {}

func (x *StreamCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCreateResponse.ProtoReflect.Descriptor instead.
func (*StreamCreateResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{1}
}

type StreamUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream *Stream `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *StreamUpdateRequest) Reset() {
	*x = StreamUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamUpdateRequest) ProtoMessage() {}

func (x *StreamUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamUpdateRequest.ProtoReflect.Descriptor instead.
func (*StreamUpdateRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *StreamUpdateRequest) GetStream() *Stream {
	if x != nil {
		return x.Stream
	}
	return nil
}

type StreamUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamUpdateResponse) Reset() {
	*x = StreamUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamUpdateResponse) ProtoMessage() {}

func (x *StreamUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamUpdateResponse.ProtoReflect.Descriptor instead.
func (*StreamUpdateResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{3}
}

type StreamDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *StreamDeleteRequest) Reset() {
	*x = StreamDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDeleteRequest) ProtoMessage() {}

func (x *StreamDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDeleteRequest.ProtoReflect.Descriptor instead.
func (*StreamDeleteRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *StreamDeleteRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type StreamDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *StreamDeleteResponse) Reset() {
	*x = StreamDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDeleteResponse) ProtoMessage() {}

func (x *StreamDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDeleteResponse.ProtoReflect.Descriptor instead.
func (*StreamDeleteResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *StreamDeleteResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type StreamGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *StreamGetRequest) Reset() {
	*x = StreamGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamGetRequest) ProtoMessage() {}

func (x *StreamGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamGetRequest.ProtoReflect.Descriptor instead.
func (*StreamGetRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *StreamGetRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type StreamGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream *Stream `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *StreamGetResponse) Reset() {
	*x = StreamGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamGetResponse) ProtoMessage() {}

func (x *StreamGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamGetResponse.ProtoReflect.Descriptor instead.
func (*StreamGetResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *StreamGetResponse) GetStream() *Stream {
	if x != nil {
		return x.Stream
	}
	return nil
}

type StreamListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *StreamListRequest) Reset() {
	*x = StreamListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamListRequest) ProtoMessage() {}

func (x *StreamListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamListRequest.ProtoReflect.Descriptor instead.
func (*StreamListRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *StreamListRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type StreamListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream []*Stream `protobuf:"bytes,1,rep,name=stream,proto3" json:"stream,omitempty"`
}

func (x *StreamListResponse) Reset() {
	*x = StreamListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamListResponse) ProtoMessage() {}

func (x *StreamListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamListResponse.ProtoReflect.Descriptor instead.
func (*StreamListResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *StreamListResponse) GetStream() []*Stream {
	if x != nil {
		return x.Stream
	}
	return nil
}

type IndexRuleBindingCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexRuleBinding *IndexRuleBinding `protobuf:"bytes,1,opt,name=index_rule_binding,json=indexRuleBinding,proto3" json:"index_rule_binding,omitempty"`
}

func (x *IndexRuleBindingCreateRequest) Reset() {
	*x = IndexRuleBindingCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingCreateRequest) ProtoMessage() {}

func (x *IndexRuleBindingCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingCreateRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingCreateRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *IndexRuleBindingCreateRequest) GetIndexRuleBinding() *IndexRuleBinding {
	if x != nil {
		return x.IndexRuleBinding
	}
	return nil
}

type IndexRuleBindingCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IndexRuleBindingCreateResponse) Reset() {
	*x = IndexRuleBindingCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingCreateResponse) ProtoMessage() {}

func (x *IndexRuleBindingCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingCreateResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingCreateResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{11}
}

type IndexRuleBindingUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexRuleBinding *IndexRuleBinding `protobuf:"bytes,1,opt,name=index_rule_binding,json=indexRuleBinding,proto3" json:"index_rule_binding,omitempty"`
}

func (x *IndexRuleBindingUpdateRequest) Reset() {
	*x = IndexRuleBindingUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingUpdateRequest) ProtoMessage() {}

func (x *IndexRuleBindingUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingUpdateRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingUpdateRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *IndexRuleBindingUpdateRequest) GetIndexRuleBinding() *IndexRuleBinding {
	if x != nil {
		return x.IndexRuleBinding
	}
	return nil
}

type IndexRuleBindingUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IndexRuleBindingUpdateResponse) Reset() {
	*x = IndexRuleBindingUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingUpdateResponse) ProtoMessage() {}

func (x *IndexRuleBindingUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingUpdateResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingUpdateResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{13}
}

type IndexRuleBindingDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *IndexRuleBindingDeleteRequest) Reset() {
	*x = IndexRuleBindingDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingDeleteRequest) ProtoMessage() {}

func (x *IndexRuleBindingDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingDeleteRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingDeleteRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *IndexRuleBindingDeleteRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type IndexRuleBindingDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *IndexRuleBindingDeleteResponse) Reset() {
	*x = IndexRuleBindingDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingDeleteResponse) ProtoMessage() {}

func (x *IndexRuleBindingDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingDeleteResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingDeleteResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *IndexRuleBindingDeleteResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type IndexRuleBindingGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *IndexRuleBindingGetRequest) Reset() {
	*x = IndexRuleBindingGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingGetRequest) ProtoMessage() {}

func (x *IndexRuleBindingGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingGetRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingGetRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *IndexRuleBindingGetRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type IndexRuleBindingGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexRuleBinding *IndexRuleBinding `protobuf:"bytes,1,opt,name=index_rule_binding,json=indexRuleBinding,proto3" json:"index_rule_binding,omitempty"`
}

func (x *IndexRuleBindingGetResponse) Reset() {
	*x = IndexRuleBindingGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingGetResponse) ProtoMessage() {}

func (x *IndexRuleBindingGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingGetResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingGetResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *IndexRuleBindingGetResponse) GetIndexRuleBinding() *IndexRuleBinding {
	if x != nil {
		return x.IndexRuleBinding
	}
	return nil
}

type IndexRuleBindingListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *IndexRuleBindingListRequest) Reset() {
	*x = IndexRuleBindingListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingListRequest) ProtoMessage() {}

func (x *IndexRuleBindingListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingListRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingListRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *IndexRuleBindingListRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type IndexRuleBindingListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexRuleBinding []*IndexRuleBinding `protobuf:"bytes,1,rep,name=index_rule_binding,json=indexRuleBinding,proto3" json:"index_rule_binding,omitempty"`
}

func (x *IndexRuleBindingListResponse) Reset() {
	*x = IndexRuleBindingListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleBindingListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleBindingListResponse) ProtoMessage() {}

func (x *IndexRuleBindingListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleBindingListResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleBindingListResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *IndexRuleBindingListResponse) GetIndexRuleBinding() []*IndexRuleBinding {
	if x != nil {
		return x.IndexRuleBinding
	}
	return nil
}

type IndexRuleCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexRule *IndexRule `protobuf:"bytes,1,opt,name=index_rule,json=indexRule,proto3" json:"index_rule,omitempty"`
}

func (x *IndexRuleCreateRequest) Reset() {
	*x = IndexRuleCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleCreateRequest) ProtoMessage() {}

func (x *IndexRuleCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleCreateRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleCreateRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *IndexRuleCreateRequest) GetIndexRule() *IndexRule {
	if x != nil {
		return x.IndexRule
	}
	return nil
}

type IndexRuleCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IndexRuleCreateResponse) Reset() {
	*x = IndexRuleCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleCreateResponse) ProtoMessage() {}

func (x *IndexRuleCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleCreateResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleCreateResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{21}
}

type IndexRuleUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexRule *IndexRule `protobuf:"bytes,1,opt,name=index_rule,json=indexRule,proto3" json:"index_rule,omitempty"`
}

func (x *IndexRuleUpdateRequest) Reset() {
	*x = IndexRuleUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleUpdateRequest) ProtoMessage() {}

func (x *IndexRuleUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleUpdateRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleUpdateRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *IndexRuleUpdateRequest) GetIndexRule() *IndexRule {
	if x != nil {
		return x.IndexRule
	}
	return nil
}

type IndexRuleUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IndexRuleUpdateResponse) Reset() {
	*x = IndexRuleUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleUpdateResponse) ProtoMessage() {}

func (x *IndexRuleUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleUpdateResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleUpdateResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{23}
}

type IndexRuleDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *IndexRuleDeleteRequest) Reset() {
	*x = IndexRuleDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleDeleteRequest) ProtoMessage() {}

func (x *IndexRuleDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleDeleteRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleDeleteRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{24}
}

func (x *IndexRuleDeleteRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type IndexRuleDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *IndexRuleDeleteResponse) Reset() {
	*x = IndexRuleDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleDeleteResponse) ProtoMessage() {}

func (x *IndexRuleDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleDeleteResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleDeleteResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *IndexRuleDeleteResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type IndexRuleGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *IndexRuleGetRequest) Reset() {
	*x = IndexRuleGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleGetRequest) ProtoMessage() {}

func (x *IndexRuleGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleGetRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleGetRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{26}
}

func (x *IndexRuleGetRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type IndexRuleGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexRule *IndexRule `protobuf:"bytes,1,opt,name=index_rule,json=indexRule,proto3" json:"index_rule,omitempty"`
}

func (x *IndexRuleGetResponse) Reset() {
	*x = IndexRuleGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleGetResponse) ProtoMessage() {}

func (x *IndexRuleGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleGetResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleGetResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *IndexRuleGetResponse) GetIndexRule() *IndexRule {
	if x != nil {
		return x.IndexRule
	}
	return nil
}

type IndexRuleListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *IndexRuleListRequest) Reset() {
	*x = IndexRuleListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleListRequest) ProtoMessage() {}

func (x *IndexRuleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleListRequest.ProtoReflect.Descriptor instead.
func (*IndexRuleListRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *IndexRuleListRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type IndexRuleListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndexRule []*IndexRule `protobuf:"bytes,1,rep,name=index_rule,json=indexRule,proto3" json:"index_rule,omitempty"`
}

func (x *IndexRuleListResponse) Reset() {
	*x = IndexRuleListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRuleListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRuleListResponse) ProtoMessage() {}

func (x *IndexRuleListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRuleListResponse.ProtoReflect.Descriptor instead.
func (*IndexRuleListResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *IndexRuleListResponse) GetIndexRule() []*IndexRule {
	if x != nil {
		return x.IndexRule
	}
	return nil
}

type MeasureCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measure *Measure `protobuf:"bytes,1,opt,name=measure,proto3" json:"measure,omitempty"`
}

func (x *MeasureCreateRequest) Reset() {
	*x = MeasureCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureCreateRequest) ProtoMessage() {}

func (x *MeasureCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureCreateRequest.ProtoReflect.Descriptor instead.
func (*MeasureCreateRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{30}
}

func (x *MeasureCreateRequest) GetMeasure() *Measure {
	if x != nil {
		return x.Measure
	}
	return nil
}

type MeasureCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MeasureCreateResponse) Reset() {
	*x = MeasureCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureCreateResponse) ProtoMessage() {}

func (x *MeasureCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureCreateResponse.ProtoReflect.Descriptor instead.
func (*MeasureCreateResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{31}
}

type MeasureUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measure *Measure `protobuf:"bytes,1,opt,name=measure,proto3" json:"measure,omitempty"`
}

func (x *MeasureUpdateRequest) Reset() {
	*x = MeasureUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureUpdateRequest) ProtoMessage() {}

func (x *MeasureUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureUpdateRequest.ProtoReflect.Descriptor instead.
func (*MeasureUpdateRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *MeasureUpdateRequest) GetMeasure() *Measure {
	if x != nil {
		return x.Measure
	}
	return nil
}

type MeasureUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MeasureUpdateResponse) Reset() {
	*x = MeasureUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureUpdateResponse) ProtoMessage() {}

func (x *MeasureUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureUpdateResponse.ProtoReflect.Descriptor instead.
func (*MeasureUpdateResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{33}
}

type MeasureDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *MeasureDeleteRequest) Reset() {
	*x = MeasureDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureDeleteRequest) ProtoMessage() {}

func (x *MeasureDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureDeleteRequest.ProtoReflect.Descriptor instead.
func (*MeasureDeleteRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{34}
}

func (x *MeasureDeleteRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MeasureDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *MeasureDeleteResponse) Reset() {
	*x = MeasureDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureDeleteResponse) ProtoMessage() {}

func (x *MeasureDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureDeleteResponse.ProtoReflect.Descriptor instead.
func (*MeasureDeleteResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{35}
}

func (x *MeasureDeleteResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type MeasureGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.Metadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *MeasureGetRequest) Reset() {
	*x = MeasureGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureGetRequest) ProtoMessage() {}

func (x *MeasureGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureGetRequest.ProtoReflect.Descriptor instead.
func (*MeasureGetRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *MeasureGetRequest) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MeasureGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measure *Measure `protobuf:"bytes,1,opt,name=measure,proto3" json:"measure,omitempty"`
}

func (x *MeasureGetResponse) Reset() {
	*x = MeasureGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureGetResponse) ProtoMessage() {}

func (x *MeasureGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureGetResponse.ProtoReflect.Descriptor instead.
func (*MeasureGetResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{37}
}

func (x *MeasureGetResponse) GetMeasure() *Measure {
	if x != nil {
		return x.Measure
	}
	return nil
}

type MeasureListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *MeasureListRequest) Reset() {
	*x = MeasureListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureListRequest) ProtoMessage() {}

func (x *MeasureListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureListRequest.ProtoReflect.Descriptor instead.
func (*MeasureListRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{38}
}

func (x *MeasureListRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type MeasureListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Measure []*Measure `protobuf:"bytes,1,rep,name=measure,proto3" json:"measure,omitempty"`
}

func (x *MeasureListResponse) Reset() {
	*x = MeasureListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureListResponse) ProtoMessage() {}

func (x *MeasureListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureListResponse.ProtoReflect.Descriptor instead.
func (*MeasureListResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{39}
}

func (x *MeasureListResponse) GetMeasure() []*Measure {
	if x != nil {
		return x.Measure
	}
	return nil
}

type GroupCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupCreateRequest) Reset() {
	*x = GroupCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCreateRequest) ProtoMessage() {}

func (x *GroupCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCreateRequest.ProtoReflect.Descriptor instead.
func (*GroupCreateRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{40}
}

func (x *GroupCreateRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GroupCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupCreateResponse) Reset() {
	*x = GroupCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCreateResponse) ProtoMessage() {}

func (x *GroupCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCreateResponse.ProtoReflect.Descriptor instead.
func (*GroupCreateResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{41}
}

type GroupDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupDeleteRequest) Reset() {
	*x = GroupDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeleteRequest) ProtoMessage() {}

func (x *GroupDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeleteRequest.ProtoReflect.Descriptor instead.
func (*GroupDeleteRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{42}
}

func (x *GroupDeleteRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GroupDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *GroupDeleteResponse) Reset() {
	*x = GroupDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupDeleteResponse) ProtoMessage() {}

func (x *GroupDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupDeleteResponse.ProtoReflect.Descriptor instead.
func (*GroupDeleteResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{43}
}

func (x *GroupDeleteResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type GroupExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupExistRequest) Reset() {
	*x = GroupExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupExistRequest) ProtoMessage() {}

func (x *GroupExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupExistRequest.ProtoReflect.Descriptor instead.
func (*GroupExistRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{44}
}

func (x *GroupExistRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type GroupExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Existence bool `protobuf:"varint,1,opt,name=existence,proto3" json:"existence,omitempty"`
}

func (x *GroupExistResponse) Reset() {
	*x = GroupExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupExistResponse) ProtoMessage() {}

func (x *GroupExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupExistResponse.ProtoReflect.Descriptor instead.
func (*GroupExistResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{45}
}

func (x *GroupExistResponse) GetExistence() bool {
	if x != nil {
		return x.Existence
	}
	return false
}

type GroupListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupListRequest) Reset() {
	*x = GroupListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupListRequest) ProtoMessage() {}

func (x *GroupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupListRequest.ProtoReflect.Descriptor instead.
func (*GroupListRequest) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{46}
}

type GroupListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group []string `protobuf:"bytes,1,rep,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupListResponse) Reset() {
	*x = GroupListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_banyandb_database_v1_rpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupListResponse) ProtoMessage() {}

func (x *GroupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_banyandb_database_v1_rpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupListResponse.ProtoReflect.Descriptor instead.
func (*GroupListResponse) Descriptor() ([]byte, []int) {
	return file_banyandb_database_v1_rpc_proto_rawDescGZIP(), []int{47}
}

func (x *GroupListResponse) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

var File_banyandb_database_v1_rpc_proto protoreflect.FileDescriptor

var file_banyandb_database_v1_rpc_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x21, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x62, 0x61, 0x6e, 0x79, 0x61,
	0x6e, 0x64, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x13, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4b, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x16, 0x0a, 0x14,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x4c, 0x0a, 0x10, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x22, 0x29, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x4a, 0x0a, 0x12, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x75, 0x0a, 0x1d, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x12, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x20,
	0x0a, 0x1e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x75, 0x0a, 0x1d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x54, 0x0a, 0x12, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x20, 0x0a, 0x1e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x1d, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62,
	0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x1e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x22, 0x56, 0x0a, 0x1a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x1b, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x12, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x33, 0x0a,
	0x1b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x74, 0x0a, 0x1c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x12, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c,
	0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x58, 0x0a, 0x16, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75,
	0x6c, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a,
	0x16, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x61,
	0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x52, 0x0a, 0x16, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x17, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x4f, 0x0a, 0x13, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x14,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61,
	0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x75, 0x6c, 0x65, 0x22, 0x2c, 0x0a, 0x14, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x57, 0x0a, 0x15, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x4f, 0x0a, 0x14, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x17, 0x0a, 0x15,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x14, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x50, 0x0a, 0x14, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x6e, 0x79,
	0x61, 0x6e, 0x64, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x31, 0x0a, 0x15, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x22, 0x4d, 0x0a, 0x11, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61,
	0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x4d, 0x0a, 0x12, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x4e,
	0x0a, 0x13, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x22, 0x2a,
	0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2a, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x2f, 0x0a,
	0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x29,
	0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x32, 0x0a, 0x12, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x65, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x12, 0x0a,
	0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0xe6, 0x03, 0x0a,
	0x0e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12,
	0x5f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x62, 0x61, 0x6e, 0x79,
	0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x62, 0x61,
	0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x62, 0x61, 0x6e, 0x79,
	0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x27, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x61,
	0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd4, 0x04, 0x0a, 0x18, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x12, 0x73, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x62,
	0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x33, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75,
	0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x33, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x62, 0x61,
	0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x30, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61,
	0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61,
	0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x87, 0x04, 0x0a,
	0x11, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x12, 0x65, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x62,
	0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75,
	0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61,
	0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x29,
	0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x61, 0x6e, 0x79,
	0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e,
	0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x61, 0x6e, 0x79,
	0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf1, 0x03, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x61, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e,
	0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x61, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x27, 0x2e, 0x62, 0x61, 0x6e,
	0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x82, 0x03, 0x0a, 0x0d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x5d, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x05, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x62,
	0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26,
	0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x72, 0x0a, 0x2a, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x73, 0x6b,
	0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64,
	0x62, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x5a, 0x44, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65,
	0x2f, 0x73, 0x6b, 0x79, 0x77, 0x61, 0x6c, 0x6b, 0x69, 0x6e, 0x67, 0x2d, 0x62, 0x61, 0x6e, 0x79,
	0x61, 0x6e, 0x64, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62,
	0x61, 0x6e, 0x79, 0x61, 0x6e, 0x64, 0x62, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_banyandb_database_v1_rpc_proto_rawDescOnce sync.Once
	file_banyandb_database_v1_rpc_proto_rawDescData = file_banyandb_database_v1_rpc_proto_rawDesc
)

func file_banyandb_database_v1_rpc_proto_rawDescGZIP() []byte {
	file_banyandb_database_v1_rpc_proto_rawDescOnce.Do(func() {
		file_banyandb_database_v1_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_banyandb_database_v1_rpc_proto_rawDescData)
	})
	return file_banyandb_database_v1_rpc_proto_rawDescData
}

var file_banyandb_database_v1_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_banyandb_database_v1_rpc_proto_goTypes = []interface{}{
	(*StreamCreateRequest)(nil),            // 0: banyandb.database.v1.StreamCreateRequest
	(*StreamCreateResponse)(nil),           // 1: banyandb.database.v1.StreamCreateResponse
	(*StreamUpdateRequest)(nil),            // 2: banyandb.database.v1.StreamUpdateRequest
	(*StreamUpdateResponse)(nil),           // 3: banyandb.database.v1.StreamUpdateResponse
	(*StreamDeleteRequest)(nil),            // 4: banyandb.database.v1.StreamDeleteRequest
	(*StreamDeleteResponse)(nil),           // 5: banyandb.database.v1.StreamDeleteResponse
	(*StreamGetRequest)(nil),               // 6: banyandb.database.v1.StreamGetRequest
	(*StreamGetResponse)(nil),              // 7: banyandb.database.v1.StreamGetResponse
	(*StreamListRequest)(nil),              // 8: banyandb.database.v1.StreamListRequest
	(*StreamListResponse)(nil),             // 9: banyandb.database.v1.StreamListResponse
	(*IndexRuleBindingCreateRequest)(nil),  // 10: banyandb.database.v1.IndexRuleBindingCreateRequest
	(*IndexRuleBindingCreateResponse)(nil), // 11: banyandb.database.v1.IndexRuleBindingCreateResponse
	(*IndexRuleBindingUpdateRequest)(nil),  // 12: banyandb.database.v1.IndexRuleBindingUpdateRequest
	(*IndexRuleBindingUpdateResponse)(nil), // 13: banyandb.database.v1.IndexRuleBindingUpdateResponse
	(*IndexRuleBindingDeleteRequest)(nil),  // 14: banyandb.database.v1.IndexRuleBindingDeleteRequest
	(*IndexRuleBindingDeleteResponse)(nil), // 15: banyandb.database.v1.IndexRuleBindingDeleteResponse
	(*IndexRuleBindingGetRequest)(nil),     // 16: banyandb.database.v1.IndexRuleBindingGetRequest
	(*IndexRuleBindingGetResponse)(nil),    // 17: banyandb.database.v1.IndexRuleBindingGetResponse
	(*IndexRuleBindingListRequest)(nil),    // 18: banyandb.database.v1.IndexRuleBindingListRequest
	(*IndexRuleBindingListResponse)(nil),   // 19: banyandb.database.v1.IndexRuleBindingListResponse
	(*IndexRuleCreateRequest)(nil),         // 20: banyandb.database.v1.IndexRuleCreateRequest
	(*IndexRuleCreateResponse)(nil),        // 21: banyandb.database.v1.IndexRuleCreateResponse
	(*IndexRuleUpdateRequest)(nil),         // 22: banyandb.database.v1.IndexRuleUpdateRequest
	(*IndexRuleUpdateResponse)(nil),        // 23: banyandb.database.v1.IndexRuleUpdateResponse
	(*IndexRuleDeleteRequest)(nil),         // 24: banyandb.database.v1.IndexRuleDeleteRequest
	(*IndexRuleDeleteResponse)(nil),        // 25: banyandb.database.v1.IndexRuleDeleteResponse
	(*IndexRuleGetRequest)(nil),            // 26: banyandb.database.v1.IndexRuleGetRequest
	(*IndexRuleGetResponse)(nil),           // 27: banyandb.database.v1.IndexRuleGetResponse
	(*IndexRuleListRequest)(nil),           // 28: banyandb.database.v1.IndexRuleListRequest
	(*IndexRuleListResponse)(nil),          // 29: banyandb.database.v1.IndexRuleListResponse
	(*MeasureCreateRequest)(nil),           // 30: banyandb.database.v1.MeasureCreateRequest
	(*MeasureCreateResponse)(nil),          // 31: banyandb.database.v1.MeasureCreateResponse
	(*MeasureUpdateRequest)(nil),           // 32: banyandb.database.v1.MeasureUpdateRequest
	(*MeasureUpdateResponse)(nil),          // 33: banyandb.database.v1.MeasureUpdateResponse
	(*MeasureDeleteRequest)(nil),           // 34: banyandb.database.v1.MeasureDeleteRequest
	(*MeasureDeleteResponse)(nil),          // 35: banyandb.database.v1.MeasureDeleteResponse
	(*MeasureGetRequest)(nil),              // 36: banyandb.database.v1.MeasureGetRequest
	(*MeasureGetResponse)(nil),             // 37: banyandb.database.v1.MeasureGetResponse
	(*MeasureListRequest)(nil),             // 38: banyandb.database.v1.MeasureListRequest
	(*MeasureListResponse)(nil),            // 39: banyandb.database.v1.MeasureListResponse
	(*GroupCreateRequest)(nil),             // 40: banyandb.database.v1.GroupCreateRequest
	(*GroupCreateResponse)(nil),            // 41: banyandb.database.v1.GroupCreateResponse
	(*GroupDeleteRequest)(nil),             // 42: banyandb.database.v1.GroupDeleteRequest
	(*GroupDeleteResponse)(nil),            // 43: banyandb.database.v1.GroupDeleteResponse
	(*GroupExistRequest)(nil),              // 44: banyandb.database.v1.GroupExistRequest
	(*GroupExistResponse)(nil),             // 45: banyandb.database.v1.GroupExistResponse
	(*GroupListRequest)(nil),               // 46: banyandb.database.v1.GroupListRequest
	(*GroupListResponse)(nil),              // 47: banyandb.database.v1.GroupListResponse
	(*Stream)(nil),                         // 48: banyandb.database.v1.Stream
	(*v1.Metadata)(nil),                    // 49: banyandb.common.v1.Metadata
	(*IndexRuleBinding)(nil),               // 50: banyandb.database.v1.IndexRuleBinding
	(*IndexRule)(nil),                      // 51: banyandb.database.v1.IndexRule
	(*Measure)(nil),                        // 52: banyandb.database.v1.Measure
}
var file_banyandb_database_v1_rpc_proto_depIdxs = []int32{
	48, // 0: banyandb.database.v1.StreamCreateRequest.stream:type_name -> banyandb.database.v1.Stream
	48, // 1: banyandb.database.v1.StreamUpdateRequest.stream:type_name -> banyandb.database.v1.Stream
	49, // 2: banyandb.database.v1.StreamDeleteRequest.metadata:type_name -> banyandb.common.v1.Metadata
	49, // 3: banyandb.database.v1.StreamGetRequest.metadata:type_name -> banyandb.common.v1.Metadata
	48, // 4: banyandb.database.v1.StreamGetResponse.stream:type_name -> banyandb.database.v1.Stream
	48, // 5: banyandb.database.v1.StreamListResponse.stream:type_name -> banyandb.database.v1.Stream
	50, // 6: banyandb.database.v1.IndexRuleBindingCreateRequest.index_rule_binding:type_name -> banyandb.database.v1.IndexRuleBinding
	50, // 7: banyandb.database.v1.IndexRuleBindingUpdateRequest.index_rule_binding:type_name -> banyandb.database.v1.IndexRuleBinding
	49, // 8: banyandb.database.v1.IndexRuleBindingDeleteRequest.metadata:type_name -> banyandb.common.v1.Metadata
	49, // 9: banyandb.database.v1.IndexRuleBindingGetRequest.metadata:type_name -> banyandb.common.v1.Metadata
	50, // 10: banyandb.database.v1.IndexRuleBindingGetResponse.index_rule_binding:type_name -> banyandb.database.v1.IndexRuleBinding
	50, // 11: banyandb.database.v1.IndexRuleBindingListResponse.index_rule_binding:type_name -> banyandb.database.v1.IndexRuleBinding
	51, // 12: banyandb.database.v1.IndexRuleCreateRequest.index_rule:type_name -> banyandb.database.v1.IndexRule
	51, // 13: banyandb.database.v1.IndexRuleUpdateRequest.index_rule:type_name -> banyandb.database.v1.IndexRule
	49, // 14: banyandb.database.v1.IndexRuleDeleteRequest.metadata:type_name -> banyandb.common.v1.Metadata
	49, // 15: banyandb.database.v1.IndexRuleGetRequest.metadata:type_name -> banyandb.common.v1.Metadata
	51, // 16: banyandb.database.v1.IndexRuleGetResponse.index_rule:type_name -> banyandb.database.v1.IndexRule
	51, // 17: banyandb.database.v1.IndexRuleListResponse.index_rule:type_name -> banyandb.database.v1.IndexRule
	52, // 18: banyandb.database.v1.MeasureCreateRequest.measure:type_name -> banyandb.database.v1.Measure
	52, // 19: banyandb.database.v1.MeasureUpdateRequest.measure:type_name -> banyandb.database.v1.Measure
	49, // 20: banyandb.database.v1.MeasureDeleteRequest.metadata:type_name -> banyandb.common.v1.Metadata
	49, // 21: banyandb.database.v1.MeasureGetRequest.metadata:type_name -> banyandb.common.v1.Metadata
	52, // 22: banyandb.database.v1.MeasureGetResponse.measure:type_name -> banyandb.database.v1.Measure
	52, // 23: banyandb.database.v1.MeasureListResponse.measure:type_name -> banyandb.database.v1.Measure
	0,  // 24: banyandb.database.v1.StreamRegistry.Create:input_type -> banyandb.database.v1.StreamCreateRequest
	2,  // 25: banyandb.database.v1.StreamRegistry.Update:input_type -> banyandb.database.v1.StreamUpdateRequest
	4,  // 26: banyandb.database.v1.StreamRegistry.Delete:input_type -> banyandb.database.v1.StreamDeleteRequest
	6,  // 27: banyandb.database.v1.StreamRegistry.Get:input_type -> banyandb.database.v1.StreamGetRequest
	8,  // 28: banyandb.database.v1.StreamRegistry.List:input_type -> banyandb.database.v1.StreamListRequest
	10, // 29: banyandb.database.v1.IndexRuleBindingRegistry.Create:input_type -> banyandb.database.v1.IndexRuleBindingCreateRequest
	12, // 30: banyandb.database.v1.IndexRuleBindingRegistry.Update:input_type -> banyandb.database.v1.IndexRuleBindingUpdateRequest
	14, // 31: banyandb.database.v1.IndexRuleBindingRegistry.Delete:input_type -> banyandb.database.v1.IndexRuleBindingDeleteRequest
	16, // 32: banyandb.database.v1.IndexRuleBindingRegistry.Get:input_type -> banyandb.database.v1.IndexRuleBindingGetRequest
	18, // 33: banyandb.database.v1.IndexRuleBindingRegistry.List:input_type -> banyandb.database.v1.IndexRuleBindingListRequest
	20, // 34: banyandb.database.v1.IndexRuleRegistry.Create:input_type -> banyandb.database.v1.IndexRuleCreateRequest
	22, // 35: banyandb.database.v1.IndexRuleRegistry.Update:input_type -> banyandb.database.v1.IndexRuleUpdateRequest
	24, // 36: banyandb.database.v1.IndexRuleRegistry.Delete:input_type -> banyandb.database.v1.IndexRuleDeleteRequest
	26, // 37: banyandb.database.v1.IndexRuleRegistry.Get:input_type -> banyandb.database.v1.IndexRuleGetRequest
	28, // 38: banyandb.database.v1.IndexRuleRegistry.List:input_type -> banyandb.database.v1.IndexRuleListRequest
	30, // 39: banyandb.database.v1.MeasureRegistry.Create:input_type -> banyandb.database.v1.MeasureCreateRequest
	32, // 40: banyandb.database.v1.MeasureRegistry.Update:input_type -> banyandb.database.v1.MeasureUpdateRequest
	34, // 41: banyandb.database.v1.MeasureRegistry.Delete:input_type -> banyandb.database.v1.MeasureDeleteRequest
	36, // 42: banyandb.database.v1.MeasureRegistry.Get:input_type -> banyandb.database.v1.MeasureGetRequest
	38, // 43: banyandb.database.v1.MeasureRegistry.List:input_type -> banyandb.database.v1.MeasureListRequest
	40, // 44: banyandb.database.v1.GroupRegistry.Create:input_type -> banyandb.database.v1.GroupCreateRequest
	42, // 45: banyandb.database.v1.GroupRegistry.Delete:input_type -> banyandb.database.v1.GroupDeleteRequest
	44, // 46: banyandb.database.v1.GroupRegistry.Exist:input_type -> banyandb.database.v1.GroupExistRequest
	46, // 47: banyandb.database.v1.GroupRegistry.List:input_type -> banyandb.database.v1.GroupListRequest
	1,  // 48: banyandb.database.v1.StreamRegistry.Create:output_type -> banyandb.database.v1.StreamCreateResponse
	3,  // 49: banyandb.database.v1.StreamRegistry.Update:output_type -> banyandb.database.v1.StreamUpdateResponse
	5,  // 50: banyandb.database.v1.StreamRegistry.Delete:output_type -> banyandb.database.v1.StreamDeleteResponse
	7,  // 51: banyandb.database.v1.StreamRegistry.Get:output_type -> banyandb.database.v1.StreamGetResponse
	9,  // 52: banyandb.database.v1.StreamRegistry.List:output_type -> banyandb.database.v1.StreamListResponse
	11, // 53: banyandb.database.v1.IndexRuleBindingRegistry.Create:output_type -> banyandb.database.v1.IndexRuleBindingCreateResponse
	13, // 54: banyandb.database.v1.IndexRuleBindingRegistry.Update:output_type -> banyandb.database.v1.IndexRuleBindingUpdateResponse
	15, // 55: banyandb.database.v1.IndexRuleBindingRegistry.Delete:output_type -> banyandb.database.v1.IndexRuleBindingDeleteResponse
	17, // 56: banyandb.database.v1.IndexRuleBindingRegistry.Get:output_type -> banyandb.database.v1.IndexRuleBindingGetResponse
	19, // 57: banyandb.database.v1.IndexRuleBindingRegistry.List:output_type -> banyandb.database.v1.IndexRuleBindingListResponse
	21, // 58: banyandb.database.v1.IndexRuleRegistry.Create:output_type -> banyandb.database.v1.IndexRuleCreateResponse
	23, // 59: banyandb.database.v1.IndexRuleRegistry.Update:output_type -> banyandb.database.v1.IndexRuleUpdateResponse
	25, // 60: banyandb.database.v1.IndexRuleRegistry.Delete:output_type -> banyandb.database.v1.IndexRuleDeleteResponse
	27, // 61: banyandb.database.v1.IndexRuleRegistry.Get:output_type -> banyandb.database.v1.IndexRuleGetResponse
	29, // 62: banyandb.database.v1.IndexRuleRegistry.List:output_type -> banyandb.database.v1.IndexRuleListResponse
	31, // 63: banyandb.database.v1.MeasureRegistry.Create:output_type -> banyandb.database.v1.MeasureCreateResponse
	33, // 64: banyandb.database.v1.MeasureRegistry.Update:output_type -> banyandb.database.v1.MeasureUpdateResponse
	35, // 65: banyandb.database.v1.MeasureRegistry.Delete:output_type -> banyandb.database.v1.MeasureDeleteResponse
	37, // 66: banyandb.database.v1.MeasureRegistry.Get:output_type -> banyandb.database.v1.MeasureGetResponse
	39, // 67: banyandb.database.v1.MeasureRegistry.List:output_type -> banyandb.database.v1.MeasureListResponse
	41, // 68: banyandb.database.v1.GroupRegistry.Create:output_type -> banyandb.database.v1.GroupCreateResponse
	43, // 69: banyandb.database.v1.GroupRegistry.Delete:output_type -> banyandb.database.v1.GroupDeleteResponse
	45, // 70: banyandb.database.v1.GroupRegistry.Exist:output_type -> banyandb.database.v1.GroupExistResponse
	47, // 71: banyandb.database.v1.GroupRegistry.List:output_type -> banyandb.database.v1.GroupListResponse
	48, // [48:72] is the sub-list for method output_type
	24, // [24:48] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_banyandb_database_v1_rpc_proto_init() }
func file_banyandb_database_v1_rpc_proto_init() {
	if File_banyandb_database_v1_rpc_proto != nil {
		return
	}
	file_banyandb_database_v1_schema_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_banyandb_database_v1_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleBindingListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRuleListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_banyandb_database_v1_rpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_banyandb_database_v1_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_banyandb_database_v1_rpc_proto_goTypes,
		DependencyIndexes: file_banyandb_database_v1_rpc_proto_depIdxs,
		MessageInfos:      file_banyandb_database_v1_rpc_proto_msgTypes,
	}.Build()
	File_banyandb_database_v1_rpc_proto = out.File
	file_banyandb_database_v1_rpc_proto_rawDesc = nil
	file_banyandb_database_v1_rpc_proto_goTypes = nil
	file_banyandb_database_v1_rpc_proto_depIdxs = nil
}
